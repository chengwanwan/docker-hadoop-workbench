version: "3"
services:
    namenode:
        image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
        container_name: namenode
        restart: always
        volumes:
            - hadoop_namenode:/hadoop/dfs/name
        environment:
            - CLUSTER_NAME=test
        ports:
            - 9870:9870
            - 9000:9000
        env_file:
            - ./hadoop.env
        networks:
            - hadoop

    datanode:
        image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
        container_name: datanode
        restart: always
        depends_on: 
            - namenode
        volumes:
            - hadoop_datanode:/hadoop/dfs/data
        environment:
            SERVICE_PRECONDITION: "namenode:9870"
        ports:
            - 9864:9864
        env_file:
            - ./hadoop.env
        networks:
            - hadoop

    resourcemanager:
        image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
        container_name: resourcemanager
        restart: always
        environment:
            SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
        ports:
            - 8088:8088
        env_file:
            - ./hadoop.env
        networks:
            - hadoop
    
    nodemanager:
        image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
        container_name: nodemanager
        restart: always
        environment:
            SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
        ports:
            - 8042:8042
        env_file:
            - ./hadoop.env
        networks:
            - hadoop
    
    historyserver:
        image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
        container_name: historyserver
        restart: always
        environment:
            SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
        volumes:
            - hadoop_historyserver:/hadoop/yarn/timeline
        ports:
            - 8188:8188
        env_file:
            - ./hadoop.env
        networks:
            - hadoop
    
    hive-server:
        image: bde2020/hive:2.3.2-postgresql-metastore
        container_name: hive-server
        restart: always
        depends_on: 
            - namenode
            - datanode
        environment:
            HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:mysql://hive-metastore-mysql/metastore"
        ports:
            - 10000:10000
            - 10002:10002
        env_file:
            - ./hadoop.env
        networks:
            - hadoop
        volumes:
            - ./jars/mysql-connector-java-8.0.25.jar:/opt/hive/lib/mysql-connector-java-8.0.25.jar

    hive-metastore:
        image: bde2020/hive:2.3.2-postgresql-metastore
        container_name: hive-metastore
        restart: always
        environment:
            SERVICE_PRECONDITION: "namenode:9870 datanode:9864 hive-metastore-mysql:3306"
        command: /opt/hive/bin/hive --service metastore
        ports:
            - 9083:9083
        env_file:
            - ./hadoop.env
        networks:
            - hadoop
        volumes:
            - ./jars/mysql-connector-java-8.0.25.jar:/opt/hive/lib/mysql-connector-java-8.0.25.jar
    
    hive-metastore-postgresql:
        image: bde2020/hive-metastore-postgresql:2.3.0
        container_name: hive-metastore-postgresql
        volumes:
            - hive-metastore-postgresql:/var/lib/postgresql/data
        networks:
            - hadoop
    
    presto-coordinator:
        image: shawnzhu/prestodb:0.181
        container_name: presto-coordinator
        ports:
            - 8090:8080
        networks:
            - hadoop
        
    spark-master:
        image: bambrow/spark-master:3.1.1-hadoop3.2
        container_name: spark-master
        depends_on:
            - namenode
            - datanode
        environment:
            - INIT_DAEMON_STEP=setup_spark
        ports:
            - 8080:8080
            - 7077:7077
            - 4040:4040
        env_file:
            - ./hadoop.env
        networks:
            - hadoop

    spark-worker:
        image: bde2020/spark-worker:3.1.1-hadoop3.2
        container_name: spark-worker
        depends_on:
            - spark-master
        environment:
            - "SPARK_MASTER=spark://spark-master:7077"
        ports:
            - 8081:8081
        env_file:
            - ./hadoop.env
        networks:
            - hadoop
    
    spark-history-server:
        image: bambrow/spark-history-server:3.1.1-hadoop3.2
        container_name: spark-history-server
        depends_on: 
            - spark-master
        ports:
            - 18080:18080
        env_file:
            - ./hadoop.env
        networks:
            - hadoop

    hive-metastore-mysql:
        image: mysql:5.7
        container_name: hive-metastore-mysql
        privileged: true
        volumes:
            #映射mysql的数据目录到宿主机，保存数据【映射使用相对路径】
            - hive_metastore_mysql:/var/lib/hive-metastore-mysql/data
        networks:
            - hadoop
        restart: always #设置无论遇到什么错，重启容器
        ports:
            # 使用宿主机的3306端口映射到容器的3306端口
            # 宿主机：容器
            - 3306:3306
        environment:
            TZ: Asia/Shanghai
            MYSQL_ROOT_PASSWORD: 520521 # root用户 密码
            MYSQL_DATABASE: metastore #数据库名
            MYSQL_USER: hive     #自定义数据库的用户
            MYSQL_PASSWORD: hive #自定义数据库的用户
            # 使用 command 可以覆盖容器启动后默认执行的命令
        command: [
            'mysqld',
            '--innodb-buffer-pool-size=80M',
            '--character-set-server=utf8mb4',  #字符集
            '--collation-server=utf8mb4_general_ci',  #排序规则
            '--default-time-zone=+8:00',
            '--lower-case-table-names=1',
            '--max_connections=1000', #最大连接数
            '--wait_timeout=28800', #非交互式连接超时时间
            '--default-authentication-plugin=mysql_native_password'  #认证方式
        ]

volumes:
    hadoop_namenode:
    hadoop_datanode:
    hadoop_historyserver:
    hive-metastore-postgresql:
    hive_metastore_mysql:

networks:
    hadoop:
        name: hadoop